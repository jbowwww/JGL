using System;
using Img = System.Drawing.Image;
using System.Threading;

using JGL.OpenGL;

namespace JGL.Resource
{
	/// <summary>
	/// Texture.
	/// </summary>
	public class Texture : Resource
	{
		public Lazy<Img> _image;
		
		public Img Image {
			get { return _image.Value; }
		}
		
		public readonly GLContextualData<Texture, int> TextureId;
			
		/// <summary>
		/// Initializes a new instance of the <see cref="JGL.Resource.Texture"/> class.
		/// </summary>
		/// <param name='uri'>URI.</param>
		public Texture(Uri uri)
		{
			_image = new Lazy<Img>(() => { Img i = Img.FromFile(uri.LocalPath); /* IsLoaded = true ; */ return i; });
			
			TextureId = new GLContextualData<Texture, int>(CreationHandler, this);
		}
		
		public static int CreationHandler(Texture texture)
		{
			// TODO: Build GL texture
			throw new NotImplementedException();
		}
	}
}

